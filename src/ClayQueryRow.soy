{namespace ClayQueryRow}

/**
* Renders a query row.
*/
{template .render}
	{@param queryItem: ?}
	{@param criteria: list<?>}
	{@param operators: list<?>}
	{@param? _handleCriteriaSelect: any}
	{@param? _handleOperatorSelect: any}
	{@param? _updateQuery: any}
	{@param conjunctions: list<?>}
	{@param spritemap: string}

	{if isNonnull($queryItem.items)}
		{call ClayQueryGroup.render}
			{param criteria: $criteria /}
			{param conjunctions: $conjunctions /}
			{param updateQuery: $_updateQuery /}
			{param operators: $operators /}
			{param query: $queryItem /}
			{param spritemap: $spritemap /}
		{/call}
	{else}
		<div class="query-row drag-item">
			<span class="drag-handle">
				{call ClayIcon.render}
					{param spritemap: $spritemap /}
					{param symbol: 'drag' /}
				{/call}
			</span>

			<div class="form-group-autofit">
				<div class="form-group-item">
					{call ClaySelect.render}
						{param multiple: false /}
						{param name: 'criteria' /}
						{param events: ['change': $_handleCriteriaSelect] /}
						{param options: $criteria /}
						{param type: 'button' /}
					{/call}
				</div>

				<div class="form-group-item">
					{call ClaySelect.render}
						{param multiple: false /}
						{param name: 'operator' /}
						{param events: ['change': $_handleOperatorSelect] /}
						{param options: $operators /}
						{param type: 'button' /}
					{/call}
				</div>

				<div class="form-group-item">
					<input class="form-control" id="queryRowValue" value="{$queryItem.value}" type="text"/>
				</div>

				<div class="form-group-item form-group-item-shrink">
					<div class="btn-group">
						<div class="btn-group-item">
							{call ClayButton.render}
								{param icon: 'check' /}
								{param monospaced: true /}
								{param spritemap: $spritemap /}
							{/call}
						</div>

						<div class="btn-group-item">
							{call ClayButton.render}
								{param icon: 'times' /}
								{param monospaced: true /}
								{param spritemap: $spritemap /}
								{param style: 'secondary' /}
							{/call}
						</div>
					</div>
				</div>
			</div>
		</div>
	{/if}
{/template}